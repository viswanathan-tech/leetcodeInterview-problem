class Solution {
    public boolean isValidSudoku(char[][] board) {
        List<Character> list =new ArrayList<Character>();
        for(int i=0;i<9;i++)
        {
            for(int j=0;j<9;j++)
            {
                if(board[i][j]!='.')
                {
                    if(!list.contains(board[i][j])) 
                    list.add(board[i][j]);
                    else
                    return false;
                }
            }
            list.clear();
        }
        for(int i=0;i<9;i++)
        {
            for(int j=0;j<9;j++)
            {
                if(board[j][i]!='.')
                {
                    if(!list.contains(board[j][i]))
                    list.add(board[j][i]);
                    else
                    return false;
                }
            }
            list.clear();
        }
        for(int i=0;i<9;i+=3)
        {
            for(int j=0;j<9;j+=3)
            {
                for(int k=i;k<i+3;k++)
                {
                    for(int l=j;l<j+3;l++)
                    {
                        if(board[k][l]!='.')
                        {
                            if(!list.contains(board[k][l]))
                            list.add(board[k][l]);
                            else
                            return false;
                        }
                    }
                }
                list.clear();
            }
        }
        return true;
    }
}
